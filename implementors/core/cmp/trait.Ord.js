(function() {var implementors = {};
implementors["ascii"] = [{"text":"impl Ord for AsciiChar","synthetic":false,"types":[]},{"text":"impl Ord for AsciiStr","synthetic":false,"types":[]},{"text":"impl Ord for AsciiString","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Ord for BigEndian","synthetic":false,"types":[]},{"text":"impl Ord for LittleEndian","synthetic":false,"types":[]}];
implementors["bytes"] = [{"text":"impl Ord for Bytes","synthetic":false,"types":[]},{"text":"impl Ord for BytesMut","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl Ord for Duration","synthetic":false,"types":[]},{"text":"impl Ord for NaiveDate","synthetic":false,"types":[]},{"text":"impl Ord for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl Ord for IsoWeek","synthetic":false,"types":[]},{"text":"impl Ord for NaiveTime","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Ord for Date&lt;Tz&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Ord for DateTime&lt;Tz&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T&gt; Ord for Shared&lt;'g, T&gt;","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;Ord, R:&nbsp;Ord&gt; Ord for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["hermit_abi"] = [{"text":"impl Ord for Priority","synthetic":false,"types":[]},{"text":"impl Ord for Handle","synthetic":false,"types":[]},{"text":"impl Ord for Version","synthetic":false,"types":[]},{"text":"impl Ord for Ipv4Address","synthetic":false,"types":[]},{"text":"impl Ord for Ipv6Address","synthetic":false,"types":[]},{"text":"impl Ord for IpAddress","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Ord for Level","synthetic":false,"types":[]},{"text":"impl Ord for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Ord for Metadata&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Ord for MetadataBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["smoltcp"] = [{"text":"impl Ord for PcapLinkType","synthetic":false,"types":[]},{"text":"impl Ord for EtherType","synthetic":false,"types":[]},{"text":"impl Ord for Address","synthetic":false,"types":[]},{"text":"impl Ord for Hardware","synthetic":false,"types":[]},{"text":"impl Ord for Operation","synthetic":false,"types":[]},{"text":"impl Ord for Version","synthetic":false,"types":[]},{"text":"impl Ord for Protocol","synthetic":false,"types":[]},{"text":"impl Ord for Address","synthetic":false,"types":[]},{"text":"impl Ord for Cidr","synthetic":false,"types":[]},{"text":"impl Ord for Endpoint","synthetic":false,"types":[]},{"text":"impl Ord for Address","synthetic":false,"types":[]},{"text":"impl Ord for Cidr","synthetic":false,"types":[]},{"text":"impl Ord for Address","synthetic":false,"types":[]},{"text":"impl Ord for Cidr","synthetic":false,"types":[]},{"text":"impl Ord for Type","synthetic":false,"types":[]},{"text":"impl Ord for FailureType","synthetic":false,"types":[]},{"text":"impl Ord for Message","synthetic":false,"types":[]},{"text":"impl Ord for DstUnreachable","synthetic":false,"types":[]},{"text":"impl Ord for Redirect","synthetic":false,"types":[]},{"text":"impl Ord for TimeExceeded","synthetic":false,"types":[]},{"text":"impl Ord for ParamProblem","synthetic":false,"types":[]},{"text":"impl Ord for Message","synthetic":false,"types":[]},{"text":"impl Ord for DstUnreachable","synthetic":false,"types":[]},{"text":"impl Ord for ParamProblem","synthetic":false,"types":[]},{"text":"impl Ord for TimeExceeded","synthetic":false,"types":[]},{"text":"impl Ord for RouterFlags","synthetic":false,"types":[]},{"text":"impl Ord for NeighborFlags","synthetic":false,"types":[]},{"text":"impl Ord for Type","synthetic":false,"types":[]},{"text":"impl Ord for PrefixInfoFlags","synthetic":false,"types":[]},{"text":"impl Ord for Handle","synthetic":false,"types":[]},{"text":"impl Ord for Instant","synthetic":false,"types":[]},{"text":"impl Ord for Duration","synthetic":false,"types":[]}];
implementors["tiny_http"] = [{"text":"impl Ord for StatusCode","synthetic":false,"types":[]},{"text":"impl Ord for HTTPVersion","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Ord for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Ord,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Ord for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Ord,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Ord for Level","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S:&nbsp;Ord&gt; Ord for Host&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Ord for Url","synthetic":false,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V:&nbsp;Ord&gt; Ord for VecMap&lt;V&gt;","synthetic":false,"types":[]}];
implementors["x86"] = [{"text":"impl Ord for EFlags","synthetic":false,"types":[]},{"text":"impl Ord for PAddr","synthetic":false,"types":[]},{"text":"impl Ord for VAddr","synthetic":false,"types":[]},{"text":"impl Ord for PML4Flags","synthetic":false,"types":[]},{"text":"impl Ord for PDPTFlags","synthetic":false,"types":[]},{"text":"impl Ord for PDFlags","synthetic":false,"types":[]},{"text":"impl Ord for PTFlags","synthetic":false,"types":[]},{"text":"impl Ord for RFlags","synthetic":false,"types":[]},{"text":"impl Ord for Cr0","synthetic":false,"types":[]},{"text":"impl Ord for Cr4","synthetic":false,"types":[]},{"text":"impl Ord for Xcr0","synthetic":false,"types":[]},{"text":"impl Ord for PageFaultError","synthetic":false,"types":[]},{"text":"impl Ord for SegmentSelector","synthetic":false,"types":[]},{"text":"impl Ord for PinbasedControls","synthetic":false,"types":[]},{"text":"impl Ord for PrimaryControls","synthetic":false,"types":[]},{"text":"impl Ord for SecondaryControls","synthetic":false,"types":[]},{"text":"impl Ord for EntryControls","synthetic":false,"types":[]},{"text":"impl Ord for ExitControls","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()