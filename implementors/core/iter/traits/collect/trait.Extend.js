(function() {var implementors = {};
implementors["ascii"] = [{"text":"impl&lt;A:&nbsp;AsRef&lt;AsciiStr&gt;&gt; Extend&lt;A&gt; for AsciiString","synthetic":false,"types":[]}];
implementors["bytes"] = [{"text":"impl Extend&lt;u8&gt; for BytesMut","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Extend&lt;&amp;'a u8&gt; for BytesMut","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R, A&gt; Extend&lt;A&gt; for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Extend&lt;A&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Extend&lt;A&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["smoltcp"] = [{"text":"impl Extend&lt;RouterFlags&gt; for RouterFlags","synthetic":false,"types":[]},{"text":"impl Extend&lt;NeighborFlags&gt; for NeighborFlags","synthetic":false,"types":[]},{"text":"impl Extend&lt;PrefixInfoFlags&gt; for PrefixInfoFlags","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Extend&lt;&lt;A as Array&gt;::Item&gt; for ArrayVec&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Extend&lt;&lt;A as Array&gt;::Item&gt; for TinyVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Extend&lt;(usize, V)&gt; for VecMap&lt;V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, V:&nbsp;Copy&gt; Extend&lt;(usize, &amp;'a V)&gt; for VecMap&lt;V&gt;","synthetic":false,"types":[]}];
implementors["x86"] = [{"text":"impl Extend&lt;EFlags&gt; for EFlags","synthetic":false,"types":[]},{"text":"impl Extend&lt;PML4Flags&gt; for PML4Flags","synthetic":false,"types":[]},{"text":"impl Extend&lt;PDPTFlags&gt; for PDPTFlags","synthetic":false,"types":[]},{"text":"impl Extend&lt;PDFlags&gt; for PDFlags","synthetic":false,"types":[]},{"text":"impl Extend&lt;PTFlags&gt; for PTFlags","synthetic":false,"types":[]},{"text":"impl Extend&lt;RFlags&gt; for RFlags","synthetic":false,"types":[]},{"text":"impl Extend&lt;Cr0&gt; for Cr0","synthetic":false,"types":[]},{"text":"impl Extend&lt;Cr4&gt; for Cr4","synthetic":false,"types":[]},{"text":"impl Extend&lt;Xcr0&gt; for Xcr0","synthetic":false,"types":[]},{"text":"impl Extend&lt;PageFaultError&gt; for PageFaultError","synthetic":false,"types":[]},{"text":"impl Extend&lt;SegmentSelector&gt; for SegmentSelector","synthetic":false,"types":[]},{"text":"impl Extend&lt;PinbasedControls&gt; for PinbasedControls","synthetic":false,"types":[]},{"text":"impl Extend&lt;PrimaryControls&gt; for PrimaryControls","synthetic":false,"types":[]},{"text":"impl Extend&lt;SecondaryControls&gt; for SecondaryControls","synthetic":false,"types":[]},{"text":"impl Extend&lt;EntryControls&gt; for EntryControls","synthetic":false,"types":[]},{"text":"impl Extend&lt;ExitControls&gt; for ExitControls","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()