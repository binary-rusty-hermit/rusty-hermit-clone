(function() {var implementors = {};
implementors["ansi_term"] = [{"text":"impl Copy for Prefix","synthetic":false,"types":[]},{"text":"impl Copy for Infix","synthetic":false,"types":[]},{"text":"impl Copy for Suffix","synthetic":false,"types":[]},{"text":"impl Copy for Style","synthetic":false,"types":[]},{"text":"impl Copy for Colour","synthetic":false,"types":[]}];
implementors["ascii"] = [{"text":"impl Copy for AsciiChar","synthetic":false,"types":[]},{"text":"impl Copy for ToAsciiCharError","synthetic":false,"types":[]},{"text":"impl Copy for AsAsciiStrError","synthetic":false,"types":[]},{"text":"impl&lt;O:&nbsp;Copy&gt; Copy for FromAsciiError&lt;O&gt;","synthetic":false,"types":[]}];
implementors["atty"] = [{"text":"impl Copy for Stream","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Copy for BigEndian","synthetic":false,"types":[]},{"text":"impl Copy for LittleEndian","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl Copy for Duration","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for LocalResult&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for FixedOffset","synthetic":false,"types":[]},{"text":"impl Copy for Utc","synthetic":false,"types":[]},{"text":"impl Copy for NaiveDate","synthetic":false,"types":[]},{"text":"impl Copy for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl Copy for IsoWeek","synthetic":false,"types":[]},{"text":"impl Copy for NaiveTime","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Copy for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for SecondsFormat","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Copy for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for Pad","synthetic":false,"types":[]},{"text":"impl Copy for ParseError","synthetic":false,"types":[]},{"text":"impl Copy for RoundingError","synthetic":false,"types":[]},{"text":"impl Copy for Weekday","synthetic":false,"types":[]},{"text":"impl Copy for Month","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl Copy for AppSettings","synthetic":false,"types":[]},{"text":"impl Copy for ArgSettings","synthetic":false,"types":[]},{"text":"impl Copy for Shell","synthetic":false,"types":[]},{"text":"impl Copy for ErrorKind","synthetic":false,"types":[]}];
implementors["core_affinity"] = [{"text":"impl Copy for CoreId","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for RecvError","synthetic":false,"types":[]},{"text":"impl Copy for TryRecvError","synthetic":false,"types":[]},{"text":"impl Copy for RecvTimeoutError","synthetic":false,"types":[]},{"text":"impl Copy for TrySelectError","synthetic":false,"types":[]},{"text":"impl Copy for SelectTimeoutError","synthetic":false,"types":[]},{"text":"impl Copy for TryReadyError","synthetic":false,"types":[]},{"text":"impl Copy for ReadyTimeoutError","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Steal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T&gt; Copy for Shared&lt;'g, T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for CachePadded&lt;T&gt;","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;Copy, R:&nbsp;Copy&gt; Copy for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["hermit_abi"] = [{"text":"impl Copy for Priority","synthetic":false,"types":[]},{"text":"impl Copy for Handle","synthetic":false,"types":[]},{"text":"impl Copy for timespec","synthetic":false,"types":[]},{"text":"impl Copy for Version","synthetic":false,"types":[]},{"text":"impl Copy for Ipv4Address","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6Address","synthetic":false,"types":[]},{"text":"impl Copy for IpAddress","synthetic":false,"types":[]}];
implementors["idna"] = [{"text":"impl Copy for Config","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Copy for Level","synthetic":false,"types":[]},{"text":"impl Copy for LevelFilter","synthetic":false,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A:&nbsp;Copy&gt; Copy for ExtendedGcd&lt;A&gt;","synthetic":false,"types":[]}];
implementors["raw_cpuid"] = [{"text":"impl Copy for CpuIdResult","synthetic":false,"types":[]},{"text":"impl Copy for CacheInfoType","synthetic":false,"types":[]},{"text":"impl Copy for CacheInfo","synthetic":false,"types":[]},{"text":"impl Copy for CacheParameter","synthetic":false,"types":[]}];
implementors["smoltcp"] = [{"text":"impl&lt;H:&nbsp;Copy&gt; Copy for PacketMetadata&lt;H&gt;","synthetic":false,"types":[]},{"text":"impl Copy for PcapLinkType","synthetic":false,"types":[]},{"text":"impl Copy for PcapMode","synthetic":false,"types":[]},{"text":"impl Copy for Checksum","synthetic":false,"types":[]},{"text":"impl Copy for EtherType","synthetic":false,"types":[]},{"text":"impl Copy for Address","synthetic":false,"types":[]},{"text":"impl Copy for Repr","synthetic":false,"types":[]},{"text":"impl Copy for Hardware","synthetic":false,"types":[]},{"text":"impl Copy for Operation","synthetic":false,"types":[]},{"text":"impl Copy for Repr","synthetic":false,"types":[]},{"text":"impl Copy for Version","synthetic":false,"types":[]},{"text":"impl Copy for Protocol","synthetic":false,"types":[]},{"text":"impl Copy for Address","synthetic":false,"types":[]},{"text":"impl Copy for Cidr","synthetic":false,"types":[]},{"text":"impl Copy for Endpoint","synthetic":false,"types":[]},{"text":"impl Copy for Address","synthetic":false,"types":[]},{"text":"impl Copy for Cidr","synthetic":false,"types":[]},{"text":"impl Copy for Repr","synthetic":false,"types":[]},{"text":"impl Copy for Address","synthetic":false,"types":[]},{"text":"impl Copy for Cidr","synthetic":false,"types":[]},{"text":"impl Copy for Repr","synthetic":false,"types":[]},{"text":"impl Copy for Type","synthetic":false,"types":[]},{"text":"impl Copy for FailureType","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Repr&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Repr&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Repr","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Repr&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Message","synthetic":false,"types":[]},{"text":"impl Copy for DstUnreachable","synthetic":false,"types":[]},{"text":"impl Copy for Redirect","synthetic":false,"types":[]},{"text":"impl Copy for TimeExceeded","synthetic":false,"types":[]},{"text":"impl Copy for ParamProblem","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Repr&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Message","synthetic":false,"types":[]},{"text":"impl Copy for DstUnreachable","synthetic":false,"types":[]},{"text":"impl Copy for ParamProblem","synthetic":false,"types":[]},{"text":"impl Copy for TimeExceeded","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Repr&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for RouterFlags","synthetic":false,"types":[]},{"text":"impl Copy for NeighborFlags","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Repr&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Type","synthetic":false,"types":[]},{"text":"impl Copy for PrefixInfoFlags","synthetic":false,"types":[]},{"text":"impl Copy for PrefixInformation","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for RedirectedHeader&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Repr&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Repr&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Repr&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for SeqNumber","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for TcpOption&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Control","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Repr&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Neighbor","synthetic":false,"types":[]},{"text":"impl Copy for Route","synthetic":false,"types":[]},{"text":"impl Copy for State","synthetic":false,"types":[]},{"text":"impl Copy for Handle","synthetic":false,"types":[]},{"text":"impl Copy for Instant","synthetic":false,"types":[]},{"text":"impl Copy for Duration","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Copy + Array&gt; Copy for ArrayVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Copy for Level","synthetic":false,"types":[]},{"text":"impl Copy for BidiClass","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl Copy for ParseError","synthetic":false,"types":[]},{"text":"impl Copy for SyntaxViolation","synthetic":false,"types":[]},{"text":"impl Copy for Position","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Parse&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for ParseOptions&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["x86"] = [{"text":"impl Copy for EFlags","synthetic":false,"types":[]},{"text":"impl Copy for TaskStateSegment","synthetic":false,"types":[]},{"text":"impl Copy for PAddr","synthetic":false,"types":[]},{"text":"impl Copy for VAddr","synthetic":false,"types":[]},{"text":"impl Copy for PML4Flags","synthetic":false,"types":[]},{"text":"impl Copy for PML4Entry","synthetic":false,"types":[]},{"text":"impl Copy for PDPTFlags","synthetic":false,"types":[]},{"text":"impl Copy for PDPTEntry","synthetic":false,"types":[]},{"text":"impl Copy for PDFlags","synthetic":false,"types":[]},{"text":"impl Copy for PDEntry","synthetic":false,"types":[]},{"text":"impl Copy for PTFlags","synthetic":false,"types":[]},{"text":"impl Copy for PTEntry","synthetic":false,"types":[]},{"text":"impl Copy for RFlags","synthetic":false,"types":[]},{"text":"impl Copy for Descriptor64","synthetic":false,"types":[]},{"text":"impl Copy for TaskStateSegment","synthetic":false,"types":[]},{"text":"impl Copy for ApicId","synthetic":false,"types":[]},{"text":"impl Copy for Cr0","synthetic":false,"types":[]},{"text":"impl Copy for Cr4","synthetic":false,"types":[]},{"text":"impl Copy for Xcr0","synthetic":false,"types":[]},{"text":"impl Copy for PageFaultError","synthetic":false,"types":[]},{"text":"impl Copy for SegmentSelector","synthetic":false,"types":[]},{"text":"impl Copy for SystemDescriptorTypes64","synthetic":false,"types":[]},{"text":"impl Copy for SystemDescriptorTypes32","synthetic":false,"types":[]},{"text":"impl Copy for DataSegmentType","synthetic":false,"types":[]},{"text":"impl Copy for CodeSegmentType","synthetic":false,"types":[]},{"text":"impl Copy for Descriptor","synthetic":false,"types":[]},{"text":"impl Copy for PinbasedControls","synthetic":false,"types":[]},{"text":"impl Copy for PrimaryControls","synthetic":false,"types":[]},{"text":"impl Copy for SecondaryControls","synthetic":false,"types":[]},{"text":"impl Copy for EntryControls","synthetic":false,"types":[]},{"text":"impl Copy for ExitControls","synthetic":false,"types":[]},{"text":"impl Copy for Ring","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()